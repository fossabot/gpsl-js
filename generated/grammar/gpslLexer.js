// Generated from grammar/gpsl.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,38,351,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,3,2,91,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,101,8,3,1,4,
1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,113,8,4,1,5,1,5,1,5,1,5,1,5,1,5,
1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,129,8,5,1,6,1,6,1,6,1,6,1,6,1,6,3,6,
137,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
1,7,1,7,3,7,157,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,
171,8,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,3,10,180,8,10,1,11,1,11,1,11,1,11,
3,11,186,8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,196,8,12,1,13,
1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,206,8,13,1,14,1,14,1,14,3,14,211,
8,14,1,15,1,15,1,15,3,15,216,8,15,1,16,1,16,1,16,3,16,221,8,16,1,17,1,17,
1,17,1,17,1,17,3,17,228,8,17,1,18,1,18,1,18,1,18,3,18,234,8,18,1,19,1,19,
1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,
21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
1,23,1,24,1,24,3,24,270,8,24,1,25,1,25,1,25,1,25,5,25,276,8,25,10,25,12,
25,279,9,25,1,25,1,25,1,26,1,26,1,26,5,26,286,8,26,10,26,12,26,289,9,26,
1,26,1,26,1,27,1,27,5,27,295,8,27,10,27,12,27,298,9,27,1,28,4,28,301,8,28,
11,28,12,28,302,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,
34,1,34,1,35,1,35,1,35,1,35,5,35,322,8,35,10,35,12,35,325,9,35,1,35,1,35,
1,35,1,35,1,36,1,36,1,36,1,36,5,36,335,8,36,10,36,12,36,338,9,36,1,36,1,
36,1,36,1,36,1,36,1,37,4,37,346,8,37,11,37,12,37,347,1,37,1,37,2,323,336,
0,38,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
38,1,0,8,2,0,8596,8596,10234,10234,2,0,33,33,126,126,1,0,124,124,1,0,34,
34,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,
32,32,394,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,1,77,1,0,
0,0,3,79,1,0,0,0,5,90,1,0,0,0,7,100,1,0,0,0,9,112,1,0,0,0,11,128,1,0,0,0,
13,136,1,0,0,0,15,156,1,0,0,0,17,170,1,0,0,0,19,172,1,0,0,0,21,179,1,0,0,
0,23,185,1,0,0,0,25,195,1,0,0,0,27,205,1,0,0,0,29,210,1,0,0,0,31,215,1,0,
0,0,33,220,1,0,0,0,35,227,1,0,0,0,37,233,1,0,0,0,39,235,1,0,0,0,41,239,1,
0,0,0,43,245,1,0,0,0,45,252,1,0,0,0,47,260,1,0,0,0,49,269,1,0,0,0,51,271,
1,0,0,0,53,282,1,0,0,0,55,292,1,0,0,0,57,300,1,0,0,0,59,304,1,0,0,0,61,306,
1,0,0,0,63,309,1,0,0,0,65,311,1,0,0,0,67,313,1,0,0,0,69,315,1,0,0,0,71,317,
1,0,0,0,73,330,1,0,0,0,75,345,1,0,0,0,77,78,5,91,0,0,78,2,1,0,0,0,79,80,
5,93,0,0,80,4,1,0,0,0,81,82,5,97,0,0,82,83,5,110,0,0,83,91,5,100,0,0,84,
91,5,38,0,0,85,86,5,38,0,0,86,91,5,38,0,0,87,88,5,47,0,0,88,91,5,92,0,0,
89,91,5,42,0,0,90,81,1,0,0,0,90,84,1,0,0,0,90,85,1,0,0,0,90,87,1,0,0,0,90,
89,1,0,0,0,91,6,1,0,0,0,92,93,5,111,0,0,93,101,5,114,0,0,94,101,5,124,0,
0,95,96,5,124,0,0,96,101,5,124,0,0,97,98,5,92,0,0,98,101,5,47,0,0,99,101,
5,43,0,0,100,92,1,0,0,0,100,94,1,0,0,0,100,95,1,0,0,0,100,97,1,0,0,0,100,
99,1,0,0,0,101,8,1,0,0,0,102,103,5,105,0,0,103,104,5,102,0,0,104,113,5,102,
0,0,105,106,5,60,0,0,106,107,5,45,0,0,107,113,5,62,0,0,108,109,5,60,0,0,
109,110,5,61,0,0,110,113,5,62,0,0,111,113,7,0,0,0,112,102,1,0,0,0,112,105,
1,0,0,0,112,108,1,0,0,0,112,111,1,0,0,0,113,10,1,0,0,0,114,115,5,101,0,0,
115,116,5,118,0,0,116,117,5,101,0,0,117,118,5,110,0,0,118,119,5,116,0,0,
119,120,5,117,0,0,120,121,5,97,0,0,121,122,5,108,0,0,122,123,5,108,0,0,123,
129,5,121,0,0,124,129,5,70,0,0,125,126,5,60,0,0,126,129,5,62,0,0,127,129,
5,9826,0,0,128,114,1,0,0,0,128,124,1,0,0,0,128,125,1,0,0,0,128,127,1,0,0,
0,129,12,1,0,0,0,130,131,5,102,0,0,131,132,5,97,0,0,132,133,5,108,0,0,133,
134,5,115,0,0,134,137,5,101,0,0,135,137,5,48,0,0,136,130,1,0,0,0,136,135,
1,0,0,0,137,14,1,0,0,0,138,139,5,103,0,0,139,140,5,108,0,0,140,141,5,111,
0,0,141,142,5,98,0,0,142,143,5,97,0,0,143,144,5,108,0,0,144,145,5,108,0,
0,145,157,5,121,0,0,146,147,5,97,0,0,147,148,5,108,0,0,148,149,5,119,0,0,
149,150,5,97,0,0,150,151,5,121,0,0,151,157,5,115,0,0,152,157,5,71,0,0,153,
154,5,91,0,0,154,157,5,93,0,0,155,157,5,9744,0,0,156,138,1,0,0,0,156,146,
1,0,0,0,156,152,1,0,0,0,156,153,1,0,0,0,156,155,1,0,0,0,157,16,1,0,0,0,158,
159,5,105,0,0,159,160,5,109,0,0,160,161,5,112,0,0,161,162,5,108,0,0,162,
163,5,105,0,0,163,164,5,101,0,0,164,171,5,115,0,0,165,166,5,45,0,0,166,171,
5,62,0,0,167,168,5,61,0,0,168,171,5,62,0,0,169,171,5,8594,0,0,170,158,1,
0,0,0,170,165,1,0,0,0,170,167,1,0,0,0,170,169,1,0,0,0,171,18,1,0,0,0,172,
173,5,105,0,0,173,174,5,110,0,0,174,20,1,0,0,0,175,176,5,108,0,0,176,177,
5,101,0,0,177,180,5,116,0,0,178,180,5,92,0,0,179,175,1,0,0,0,179,178,1,0,
0,0,180,22,1,0,0,0,181,186,7,1,0,0,182,183,5,110,0,0,183,184,5,111,0,0,184,
186,5,116,0,0,185,181,1,0,0,0,185,182,1,0,0,0,186,24,1,0,0,0,187,188,5,110,
0,0,188,189,5,101,0,0,189,190,5,120,0,0,190,196,5,116,0,0,191,196,5,78,0,
0,192,193,5,40,0,0,193,196,5,41,0,0,194,196,5,9711,0,0,195,187,1,0,0,0,195,
191,1,0,0,0,195,192,1,0,0,0,195,194,1,0,0,0,196,26,1,0,0,0,197,198,5,117,
0,0,198,199,5,110,0,0,199,200,5,116,0,0,200,201,5,105,0,0,201,206,5,108,
0,0,202,206,5,85,0,0,203,204,5,83,0,0,204,206,5,85,0,0,205,197,1,0,0,0,205,
202,1,0,0,0,205,203,1,0,0,0,206,28,1,0,0,0,207,211,5,87,0,0,208,209,5,87,
0,0,209,211,5,85,0,0,210,207,1,0,0,0,210,208,1,0,0,0,211,30,1,0,0,0,212,
216,5,77,0,0,213,214,5,83,0,0,214,216,5,82,0,0,215,212,1,0,0,0,215,213,1,
0,0,0,216,32,1,0,0,0,217,221,5,82,0,0,218,219,5,87,0,0,219,221,5,82,0,0,
220,217,1,0,0,0,220,218,1,0,0,0,221,34,1,0,0,0,222,223,5,116,0,0,223,224,
5,114,0,0,224,225,5,117,0,0,225,228,5,101,0,0,226,228,5,49,0,0,227,222,1,
0,0,0,227,226,1,0,0,0,228,36,1,0,0,0,229,230,5,120,0,0,230,231,5,111,0,0,
231,234,5,114,0,0,232,234,5,94,0,0,233,229,1,0,0,0,233,232,1,0,0,0,234,38,
1,0,0,0,235,236,5,110,0,0,236,237,5,102,0,0,237,238,5,97,0,0,238,40,1,0,
0,0,239,240,5,98,0,0,240,241,5,117,0,0,241,242,5,99,0,0,242,243,5,104,0,
0,243,244,5,105,0,0,244,42,1,0,0,0,245,246,5,115,0,0,246,247,5,116,0,0,247,
248,5,97,0,0,248,249,5,116,0,0,249,250,5,101,0,0,250,251,5,115,0,0,251,44,
1,0,0,0,252,253,5,105,0,0,253,254,5,110,0,0,254,255,5,105,0,0,255,256,5,
116,0,0,256,257,5,105,0,0,257,258,5,97,0,0,258,259,5,108,0,0,259,46,1,0,
0,0,260,261,5,97,0,0,261,262,5,99,0,0,262,263,5,99,0,0,263,264,5,101,0,0,
264,265,5,112,0,0,265,266,5,116,0,0,266,48,1,0,0,0,267,270,3,51,25,0,268,
270,3,53,26,0,269,267,1,0,0,0,269,268,1,0,0,0,270,50,1,0,0,0,271,277,5,124,
0,0,272,273,5,92,0,0,273,276,5,124,0,0,274,276,8,2,0,0,275,272,1,0,0,0,275,
274,1,0,0,0,276,279,1,0,0,0,277,275,1,0,0,0,277,278,1,0,0,0,278,280,1,0,
0,0,279,277,1,0,0,0,280,281,5,124,0,0,281,52,1,0,0,0,282,287,5,34,0,0,283,
286,5,34,0,0,284,286,8,3,0,0,285,283,1,0,0,0,285,284,1,0,0,0,286,289,1,0,
0,0,287,285,1,0,0,0,287,288,1,0,0,0,288,290,1,0,0,0,289,287,1,0,0,0,290,
291,5,34,0,0,291,54,1,0,0,0,292,296,7,4,0,0,293,295,7,5,0,0,294,293,1,0,
0,0,295,298,1,0,0,0,296,294,1,0,0,0,296,297,1,0,0,0,297,56,1,0,0,0,298,296,
1,0,0,0,299,301,7,6,0,0,300,299,1,0,0,0,301,302,1,0,0,0,302,300,1,0,0,0,
302,303,1,0,0,0,303,58,1,0,0,0,304,305,5,61,0,0,305,60,1,0,0,0,306,307,5,
42,0,0,307,308,5,61,0,0,308,62,1,0,0,0,309,310,5,44,0,0,310,64,1,0,0,0,311,
312,5,59,0,0,312,66,1,0,0,0,313,314,5,40,0,0,314,68,1,0,0,0,315,316,5,41,
0,0,316,70,1,0,0,0,317,318,5,47,0,0,318,319,5,47,0,0,319,323,1,0,0,0,320,
322,9,0,0,0,321,320,1,0,0,0,322,325,1,0,0,0,323,324,1,0,0,0,323,321,1,0,
0,0,324,326,1,0,0,0,325,323,1,0,0,0,326,327,5,10,0,0,327,328,1,0,0,0,328,
329,6,35,0,0,329,72,1,0,0,0,330,331,5,47,0,0,331,332,5,42,0,0,332,336,1,
0,0,0,333,335,9,0,0,0,334,333,1,0,0,0,335,338,1,0,0,0,336,337,1,0,0,0,336,
334,1,0,0,0,337,339,1,0,0,0,338,336,1,0,0,0,339,340,5,42,0,0,340,341,5,47,
0,0,341,342,1,0,0,0,342,343,6,36,0,0,343,74,1,0,0,0,344,346,7,7,0,0,345,
344,1,0,0,0,346,347,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,0,348,349,1,0,
0,0,349,350,6,37,0,0,350,76,1,0,0,0,27,0,90,100,112,128,136,156,170,179,
185,195,205,210,215,220,227,233,269,275,277,285,287,296,302,323,336,347,
1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class gpslLexer extends antlr4.Lexer {

    static grammarFileName = "gpsl.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'['", "']'", null, null, null, null, null, 
                         null, null, "'in'", null, null, null, null, null, 
                         null, null, null, null, "'nfa'", "'buchi'", "'states'", 
                         "'initial'", "'accept'", null, null, null, null, 
                         null, "'='", "'*='", "','", "';'", "'('", "')'" ];
	static symbolicNames = [ null, null, null, "CONJUNCTION", "DISJUNCTION", 
                          "EQUIVALENCE", "EVENTUALLY", "FALSE", "GLOBALLY", 
                          "IMPLICATION", "IN", "LET", "NEGATION", "NEXT", 
                          "SUNTIL", "WUNTIL", "SRELEASE", "WRELEASE", "TRUE", 
                          "XOR", "NFA", "BUCHI", "STATES", "INITIAL", "ACCEPT", 
                          "ATOMINLINE", "PIPEATOM", "QUOTEATOM", "IDENTIFIER", 
                          "NATURAL", "EQ", "SEQ", "COMMA", "SEMICOLON", 
                          "LPAREN", "RPAREN", "LINE_COMMENT", "COMMENT", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "CONJUNCTION", "DISJUNCTION", "EQUIVALENCE", 
                      "EVENTUALLY", "FALSE", "GLOBALLY", "IMPLICATION", 
                      "IN", "LET", "NEGATION", "NEXT", "SUNTIL", "WUNTIL", 
                      "SRELEASE", "WRELEASE", "TRUE", "XOR", "NFA", "BUCHI", 
                      "STATES", "INITIAL", "ACCEPT", "ATOMINLINE", "PIPEATOM", 
                      "QUOTEATOM", "IDENTIFIER", "NATURAL", "EQ", "SEQ", 
                      "COMMA", "SEMICOLON", "LPAREN", "RPAREN", "LINE_COMMENT", 
                      "COMMENT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

gpslLexer.EOF = antlr4.Token.EOF;
gpslLexer.T__0 = 1;
gpslLexer.T__1 = 2;
gpslLexer.CONJUNCTION = 3;
gpslLexer.DISJUNCTION = 4;
gpslLexer.EQUIVALENCE = 5;
gpslLexer.EVENTUALLY = 6;
gpslLexer.FALSE = 7;
gpslLexer.GLOBALLY = 8;
gpslLexer.IMPLICATION = 9;
gpslLexer.IN = 10;
gpslLexer.LET = 11;
gpslLexer.NEGATION = 12;
gpslLexer.NEXT = 13;
gpslLexer.SUNTIL = 14;
gpslLexer.WUNTIL = 15;
gpslLexer.SRELEASE = 16;
gpslLexer.WRELEASE = 17;
gpslLexer.TRUE = 18;
gpslLexer.XOR = 19;
gpslLexer.NFA = 20;
gpslLexer.BUCHI = 21;
gpslLexer.STATES = 22;
gpslLexer.INITIAL = 23;
gpslLexer.ACCEPT = 24;
gpslLexer.ATOMINLINE = 25;
gpslLexer.PIPEATOM = 26;
gpslLexer.QUOTEATOM = 27;
gpslLexer.IDENTIFIER = 28;
gpslLexer.NATURAL = 29;
gpslLexer.EQ = 30;
gpslLexer.SEQ = 31;
gpslLexer.COMMA = 32;
gpslLexer.SEMICOLON = 33;
gpslLexer.LPAREN = 34;
gpslLexer.RPAREN = 35;
gpslLexer.LINE_COMMENT = 36;
gpslLexer.COMMENT = 37;
gpslLexer.WS = 38;



